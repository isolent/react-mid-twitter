{"ast":null,"code":"var _jsxFileName = \"/Users/aruzhankaharmanova/Desktop/react-mid-twitter/src/components/PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPostById } from '../mockApi';\nimport \"./PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPosts] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [editingCommentIndex, setEditingCommentIndex] = useState(-1);\n  const [comments, setComments] = useState([]); // Добавьте состояние для комментариев\n\n  // Функция для добавления комментария\n  const addComment = comment => {\n    setComments([...comments, comment]);\n  };\n\n  // Функция для обновления комментария\n  const updateComment = (index, comment) => {\n    const updatedComments = [...comments];\n    updatedComments[index] = comment;\n    setComments(updatedComments);\n  };\n\n  // Функция для удаления комментария\n  const deleteComment = index => {\n    const updatedComments = [...comments];\n    updatedComments.splice(index, 1);\n    setComments(updatedComments);\n  };\n  const handleAddComment = () => {\n    if (newComment) {\n      addComment(newComment);\n      setNewComment('');\n    }\n  };\n  const handleEditComment = index => {\n    setEditingCommentIndex(index);\n    setNewComment(comments[index]);\n  };\n  const handleUpdateComment = () => {\n    if (newComment) {\n      updateComment(editingCommentIndex, newComment);\n      setEditingCommentIndex(-1);\n      setNewComment('');\n    }\n  };\n  useEffect(() => {\n    fetchPostById(parseInt(id, 10)).then(data => {\n      setPosts(data);\n    }).catch(error => {\n      console.error('Error loading post data:', error);\n    });\n  }, [id]);\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The post was not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"information\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          className: \"add-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"but\",\n          onClick: editingCommentIndex === -1 ? handleAddComment : handleUpdateComment,\n          children: editingCommentIndex === -1 ? 'Send' : 'Update'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", comment, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deled\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteComment(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditComment(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"VkM1XjsGhhTHypz4kTMecw0Q54Y=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\n;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPostById","jsxDEV","_jsxDEV","PostDetail","_s","id","post","setPosts","newComment","setNewComment","editingCommentIndex","setEditingCommentIndex","comments","setComments","addComment","comment","updateComment","index","updatedComments","deleteComment","splice","handleAddComment","handleEditComment","handleUpdateComment","parseInt","then","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/aruzhankaharmanova/Desktop/react-mid-twitter/src/components/PostDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPostById } from '../mockApi';\r\nimport \"./PostDetail\";\r\n\r\nfunction PostDetail() {\r\n  const { id } = useParams();\r\n  const [post, setPosts] = useState(null);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [editingCommentIndex, setEditingCommentIndex] = useState(-1);\r\n  const [comments, setComments] = useState([]); // Добавьте состояние для комментариев\r\n\r\n  // Функция для добавления комментария\r\n  const addComment = (comment) => {\r\n    setComments([...comments, comment]);\r\n  };\r\n\r\n  // Функция для обновления комментария\r\n  const updateComment = (index, comment) => {\r\n    const updatedComments = [...comments];\r\n    updatedComments[index] = comment;\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  // Функция для удаления комментария\r\n  const deleteComment = (index) => {\r\n    const updatedComments = [...comments];\r\n    updatedComments.splice(index, 1);\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    if (newComment) {\r\n      addComment(newComment);\r\n      setNewComment('');\r\n    }\r\n  };\r\n\r\n  const handleEditComment = (index) => {\r\n    setEditingCommentIndex(index);\r\n    setNewComment(comments[index]);\r\n  };\r\n\r\n  const handleUpdateComment = () => {\r\n    if (newComment) {\r\n      updateComment(editingCommentIndex, newComment);\r\n      setEditingCommentIndex(-1);\r\n      setNewComment('');\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPostById(parseInt(id, 10))\r\n      .then((data) => {\r\n        setPosts(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error loading post data:', error);\r\n      });\r\n  }, [id]);\r\n\r\n  if (!post) {\r\n    return <div>The post was not found.</div>;\r\n  }\r\n\r\nreturn (\r\n    <div className='main'>\r\n      <div>\r\n        <div className='information'>\r\n          <p>{post.name}</p> \r\n          <p>{post.description}</p>\r\n        </div>\r\n\r\n       <div className='line'>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          className='add-comment'\r\n        />\r\n        <button className='but' onClick={editingCommentIndex === -1 ? handleAddComment : handleUpdateComment}>\r\n          {editingCommentIndex === -1 ? 'Send' : 'Update'}\r\n        </button>\r\n      </div>\r\n\r\n      <h3>Comments</h3>\r\n        {comments.map((comment, index) => (\r\n          <div key={index} className=\"comment-box\">\r\n            <p> <strong> {comment} </strong> </p>\r\n            <div className='deled'>\r\n            <button onClick={() => deleteComment(index)}>Delete</button>\r\n            <button onClick={() => handleEditComment(index)}>Edit</button>\r\n          </div>\r\n          </div>\r\n        ))}\r\n\r\n      </div>\r\n </div>\r\n);\r\n};\r\n\r\nexport default PostDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,YAAY;AAC1C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMgB,UAAU,GAAIC,OAAO,IAAK;IAC9BF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,OAAO,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEF,OAAO,KAAK;IACxC,MAAMG,eAAe,GAAG,CAAC,GAAGN,QAAQ,CAAC;IACrCM,eAAe,CAACD,KAAK,CAAC,GAAGF,OAAO;IAChCF,WAAW,CAACK,eAAe,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIF,KAAK,IAAK;IAC/B,MAAMC,eAAe,GAAG,CAAC,GAAGN,QAAQ,CAAC;IACrCM,eAAe,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAChCJ,WAAW,CAACK,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIb,UAAU,EAAE;MACdM,UAAU,CAACN,UAAU,CAAC;MACtBC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAIL,KAAK,IAAK;IACnCN,sBAAsB,CAACM,KAAK,CAAC;IAC7BR,aAAa,CAACG,QAAQ,CAACK,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIf,UAAU,EAAE;MACdQ,aAAa,CAACN,mBAAmB,EAAEF,UAAU,CAAC;MAC9CG,sBAAsB,CAAC,CAAC,CAAC,CAAC;MAC1BF,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAGDZ,SAAS,CAAC,MAAM;IACdG,aAAa,CAACwB,QAAQ,CAACnB,EAAE,EAAE,EAAE,CAAC,CAAC,CAC5BoB,IAAI,CAAEC,IAAI,IAAK;MACdnB,QAAQ,CAACmB,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,CAACvB,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAA4B,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEF,oBACIhC,OAAA;IAAKiC,SAAS,EAAC,MAAM;IAAAL,QAAA,eACnB5B,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1B5B,OAAA;UAAA4B,QAAA,EAAIxB,IAAI,CAAC8B;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBhC,OAAA;UAAA4B,QAAA,EAAIxB,IAAI,CAAC+B;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEPhC,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACpB5B,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEhC,UAAW;UAClBiC,QAAQ,EAAGC,CAAC,IAAKjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CL,SAAS,EAAC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFhC,OAAA;UAAQiC,SAAS,EAAC,KAAK;UAACS,OAAO,EAAElC,mBAAmB,KAAK,CAAC,CAAC,GAAGW,gBAAgB,GAAGE,mBAAoB;UAAAO,QAAA,EAClGpB,mBAAmB,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG;QAAQ;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENhC,OAAA;QAAA4B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACdtB,QAAQ,CAACiC,GAAG,CAAC,CAAC9B,OAAO,EAAEE,KAAK,kBAC3Bf,OAAA;QAAiBiC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBACtC5B,OAAA;UAAA4B,QAAA,GAAG,GAAC,eAAA5B,OAAA;YAAA4B,QAAA,GAAQ,GAAC,EAACf,OAAO,EAAC,GAAC;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrChC,OAAA;UAAKiC,SAAS,EAAC,OAAO;UAAAL,QAAA,gBACtB5B,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMzB,aAAa,CAACF,KAAK,CAAE;YAAAa,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5DhC,OAAA;YAAQ0C,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACL,KAAK,CAAE;YAAAa,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA,GALIjB,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEP;AAAC9B,EAAA,CAhGQD,UAAU;EAAA,QACFJ,SAAS;AAAA;AAAA+C,EAAA,GADjB3C,UAAU;AAgGlB;AAED,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}